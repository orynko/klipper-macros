[gcode_macro _print_start_phase_probing]
description: Inserted by slicer at start of print. Performs probing (including
    mesh bed level) and other operations that should be run when the bed and
    chamber are stabilized at their target temps.
    Usage: See PRINT_START.
gcode:
    _PRINT_START_PHASE_CHECK PHASE=probing
    {% set print = printer["gcode_macro print_start_set"].print %}
    {% set km = printer["gcode_macro _km_globals"] %}
    {% set MESH_MIN = print.MESH_MIN|default(None) %}
    {% set MESH_MAX = print.MESH_MAX|default(None) %}
  
    # Randomize the placement of the print on the bed.
    {% if km.start_random_placement_max > 0 and print.PRINT_MIN and MESH_MIN %}
        {% set PRINT_MIN = print.PRINT_MIN.split(",")|map('float')|list %}
        {% set PRINT_MAX = print.PRINT_MAX.split(",")|map('float')|list %}
        {% set x_offset = (
                (
                    (km.print_max[0] - km.print_min[0] - PRINT_MAX[0] +
                        PRINT_MIN[0] - 2 * km.start_random_placement_padding
                    )|int,
                    km.start_random_placement_max * 2
                )|min, 
                0
            )|max 
        %}
        {% set y_offset = (
                (
                    (km.print_max[1] - km.print_min[1] - PRINT_MAX[1] +
                        PRINT_MIN[1] - 2 * km.start_random_placement_padding
                    )|int,
                    km.start_random_placement_max * 2
                )|min, 
                0
            )|max 
        %}
    
        {% if x_offset > 0 %}
            {% set x_offset = range(x_offset)|random + km.print_min[0] -
                    PRINT_MIN[0] + km.start_random_placement_padding 
            %}
        {% endif %}
    
        {% if y_offset > 0 %}
            {% set y_offset = range(y_offset)|random + km.print_min[1] -
                PRINT_MIN[1] + km.start_random_placement_padding 
            %}
        {% endif %}
    
        # This MESH_MIN/MESH_MAX gets passed to BED_MESH_CALIBRATE below, but the
        # rest of the macros rely on SET_GCODE_OFFSET performing the adjustment.
        {% set MESH_MIN = MESH_MIN.split(",")|map('float')|list %}
        {% set MESH_MAX = MESH_MAX.split(",")|map('float')|list %}
        {% set MESH_MIN_NEW = (MESH_MIN[0] + x_offset, MESH_MIN[1] + y_offset) %}
        {% set MESH_MAX_NEW = (MESH_MAX[0] + x_offset, MESH_MAX[1] + y_offset) %}
        {
            action_respond_info(
                "Relocating print origin from (%.3f,%.3f) "|format(*MESH_MIN) +
                    "to (%.3f,%.3f)"|format(*MESH_MIN_NEW)
            )
        }
        {% set MESH_MIN = (MESH_MIN_NEW[0], MESH_MIN_NEW[1])|join(',') %}
        {% set MESH_MAX = (MESH_MAX_NEW[0], MESH_MAX_NEW[1])|join(',') %}
        PRINT_START_SET PRINT_OFFSET={"%d,%d" % (x_offset,y_offset)}
    {% endif %}

    {% set EXTRUDER = print.EXTRUDER|int %}
    {% set km = printer["gcode_macro _km_globals"] %}
    {% set start_level_bed_at_temp = km.start_level_bed_at_temp and not printer.bed_mesh.profile_name %}
    {% set start_home_z_at_temp = km.start_home_z_at_temp and not print.BED_AT_TARGET|int %}
    {% set actions_at_temp = start_level_bed_at_temp 
        or km.start_quad_gantry_level_at_temp 
        or km.start_z_tilt_adjust_at_temp 
        or start_home_z_at_temp 
    %}
  
    {% if actions_at_temp %}
        {% if km.start_extruder_probing_temp > 0 %}
            _PRINT_STATUS ACTION=CHANGE STATUS=extruder_heating RESET_STACK=1
            _PARK_IF_NEEDED HEATER={printer.toolhead.extruder} RANGE=2
            M109 R{km.start_extruder_probing_temp}
        {% else %}
            M104 S{EXTRUDER} # set the final extruder target temperature
        {% endif %}
    
        {% if start_home_z_at_temp %}
            _PRINT_STATUS ACTION=CHANGE STATUS=homing RESET_STACK=1
            G28 Z # Re-home only the Z axis now that the bed has stabilized.
        {% endif %}
    
        {% if km.start_z_tilt_adjust_at_temp %}
            _PRINT_STATUS ACTION=CHANGE STATUS=calibrating_z RESET_STACK=1
            Z_TILT_ADJUST
        {% endif %}
    
        {% if km.start_quad_gantry_level_at_temp %}
            _PRINT_STATUS ACTION=CHANGE STATUS=leveling_gantry RESET_STACK=1
            QUAD_GANTRY_LEVEL
        {% endif %}
    
        {% if start_level_bed_at_temp %}
            _PRINT_STATUS ACTION=CHANGE STATUS=meshing RESET_STACK=1
            _MESH_IF_NEEDED {% if MESH_MIN %} MESH_MIN={MESH_MIN}{% endif
                           %}{% if MESH_MAX %} MESH_MAX={MESH_MAX}{% endif %}
        {% endif %}
    
        {% if km.start_extruder_probing_temp > 0 %}
            M104 S{EXTRUDER} # set the final extruder target temperature
        {% endif %}
        G4
    {% endif %}
  
    PRINT_START_SET PRINT_START_PHASE="extruder"