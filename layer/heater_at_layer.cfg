[gcode_macro heater_at_layer]
description: Convenience macro to schedule a heater adjustment at the specified
    layer change. LAYER=next will cause the command to run at the next layer
    change. See SET_HEATER_SCALING for additional arguments.
    Usage: HEATER_AT_LAYER { HEIGHT=<pos> | LAYER=<layer> } ...
gcode:
    # Dummy argument block for Mainsail
    {% set dummy = None if True else "
        {% set dummy = params.LAYER|default(layer number)|float %}
        {% set dummy = params.HEIGHT|default(Z height)|int %}
        {% set dummy = params.HEATER|default(e.g. extruder) %}
        {% set dummy = params.SCALE|default(1.0)|float %}
        {% set dummy = params.BUMP|default(0.0)|float %}
        {% set dummy = params.MAXIMUM|default(max_temp)|float %}
        {% set dummy = params.MINIMUM|default(min_temp)|float %}
        {% set dummy = params.TARGET|default(current target)|float %}
        " 
    %} # End argument block for Mainsail
    
    {% set filtered_params = params|reject('in',['HEIGHT','LAYER'])|list|sort %}
    _CHECK_HEATER_PARAMS{% for k in filtered_params%}{' ' ~ k ~ '=' ~ params[k]}{% endfor %}
    _GCODE_AT_LAYER{% for k in params|select('in',['HEIGHT','LAYER'])|list %}{
        ' ' ~ k ~ '=' ~ params[k] }{% endfor
    %} COMMAND="
        SET_HEATER_SCALING{% for k in filtered_params %}{
        ' ' ~ k ~ '=\\\"' ~ params[k]
        |replace('\\','\\\\')
        |replace('\'','\\\'')
        |replace('\"','\\\"') ~ '\\\"'
        }{% endfor %}
    "