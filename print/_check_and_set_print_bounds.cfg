[gcode_macro _km_check_and_set_print_bounds]
description: Validates all print bounds and caches their values.
gcode:
    {% set km = printer["gcode_macro _km_globals"] %}
    {% set print = printer["gcode_macro print_start_set"].print %}

    # Check the mesh bounds.
    {% if print.MESH_MIN %}
        {% set MESH_MIN = print.MESH_MIN.split(",")|map('float')|list %}
        {% set MESH_MAX = print.MESH_MAX.split(",")|map('float')|list %}
        
        {%if MESH_MIN[0] < km.print_min[0] or MESH_MIN[1] < km.print_min[1] %}
            {
                action_raise_error(
                    "MESH_MIN %s is outside the printable bounds" %
                        (MESH_MIN|string, km.print_min|string)
                )
            }
        {%elif MESH_MAX[0] > km.print_max[0] or MESH_MAX[1] > km.print_max[1] %}
            {
                action_raise_error(
                    "MESH_MAX %s is outside the printable bounds %s" %
                        (MESH_MAX|string, km.print_max|string)
                )
            }
        {% endif %}
    {% endif %}

    # Find all the model bounds (including any bounds passed in).
    {% set points = [] %}
    {% if print.MODEL_MIN or print.MODEL_MAX %}
        {% set MODEL_MIN = print.MODEL_MIN.split(",")|map('float')|list %}
        {% set MODEL_MAX = print.MODEL_MAX.split(",")|map('float')|list %}
        {% set points = [MODEL_MIN, MODEL_MAX] %}
    {% endif %}
  
    {% if (printer.exclude_object|default({})).objects %}
        {% set points = printer.exclude_object.objects|selectattr('polygon')|
            map(attribute='polygon')|sum(start=points) 
        %}
        {% set points_len = points|length %}
    
        {% if points_len >= 2 %}
            {% set x_coords = (points|map(attribute=0)|sort|list)[0::points_len-1] %}
            {% set y_coords = (points|map(attribute=1)|sort|list)[0::points_len-1] %}
            {% set MODEL_MIN = (x_coords[0],y_coords[0])|map('float')|list %}
            {% set MODEL_MAX = (x_coords[1],y_coords[1])|map('float')|list %}
            PRINT_START_SET MODEL_MIN="{
                MODEL_MIN|join(',')
            }" MODEL_MAX="{
                MODEL_MAX|join(',')
            }"
        {% endif %}
    {% endif %}

    {% if MODEL_MIN %}
        # Check the model bounds.
        {% if MODEL_MIN[0] < km.print_min[0] or MODEL_MIN[1] < km.print_min[1] %}
            {
                action_raise_error(
                    "MODEL_MIN %s is outside the printable bounds" %
                        (MODEL_MIN|string, km.print_min|string)
                )
            }
        {% elif MODEL_MAX[0] > km.print_max[0] or MODEL_MAX[1] > km.print_max[1] %}
            {
                action_raise_error(
                    "MODEL_MAX %s is outside the printable bounds %s" %
                        (MODEL_MAX|string, km.print_max|string)
                )
            }
        {% endif %}
    {% endif %}

    # Set the PRINT_LIMITS
    {% if MESH_MIN and MODEL_MIN %}
        PRINT_START_SET PRINT_MIN="{
            (
                (MODEL_MIN[0],MESH_MIN[0])|min,
                (MODEL_MIN[1],MESH_MIN[1])|min
            )|join(',')
        }" PRINT_MAX="{
            (
                (MODEL_MAX[0],MESH_MAX[0])|max,
                (MODEL_MAX[1],MESH_MAX[1])|max
            )|join(',')
        }"
    {% else %}
        PRINT_START_SET PRINT_MIN="{
            km.print_min|join(',')
        }" PRINT_MAX="{
            km.print_max|join(',')
        }"
    {% endif %}